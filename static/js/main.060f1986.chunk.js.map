{"version":3,"sources":["components/qr-code-test/index.js","App.js","reportWebVitals.js","index.js"],"names":["QrCodeTest","useState","qrInput","setQrInput","qrContent","setQrContent","a","value","onChange","e","target","type","onClick","onSubmit","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oOA0BeA,EAvBI,WACjB,MAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAkCF,mBAAS,IAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KAFuB,4CAIvB,sBAAAC,EAAA,sDACED,EAAaH,GADf,4CAJuB,sBAQvB,OACE,gCACE,iCACE,0BAAUK,MAAOL,EAASM,SAAU,SAACC,GAAD,OAAON,EAAWM,EAAEC,OAAOH,UAC/D,uBACA,wBAAQI,KAAK,SAASC,QAAS,kBAbd,0CAaoBC,IAArC,sCAIF,uBACA,cAAC,IAAD,CAAQN,MAAOH,QCfNU,MAJf,WACE,OAAO,cAAC,EAAD,KCSMC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.060f1986.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport QRCode from \"qrcode.react\";\n\nconst QrCodeTest = () => {\n  const [qrInput, setQrInput] = useState(\"\");\n  const [qrContent, setQrContent] = useState(\"\");\n\n  async function onSubmit() {\n    setQrContent(qrInput);\n  }\n\n  return (\n    <div>\n      <form>\n        <textarea value={qrInput} onChange={(e) => setQrInput(e.target.value)} />\n        <br />\n        <button type=\"button\" onClick={() => onSubmit()}>\n          QRCodify this content\n        </button>\n      </form>\n      <hr />\n      <QRCode value={qrContent} />\n    </div>\n  );\n};\n\nexport default QrCodeTest;","import QrCodeTest from \"./components/qr-code-test/index.js\";\n\nfunction App() {\n  return <QrCodeTest />;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}